[workspace]
resolver = "2"
members = [
    "repo_src/frontend",
    "repo_src/backend",
    "repo_src/shared",
]

# Leptos configuration for the workspace
[[workspace.metadata.leptos]]
# The name of this Leptos project
name = "frontend"

# The package name for the client/lib side
lib-package = "frontend"

# The package name for the server/binary side
bin-package = "backend"

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle.
# Should match the `name` in `frontend/Cargo.toml`.
output-name = "frontend"

# The site root folder is where cargo-leptos generate all output.
# WARNING: all content of this folder will be erased on a rebuild.
site-root = "target/site"

# The site-pkg-dir is where cargo-leptos generate the WASM/JS package.
site-pkg-dir = "pkg"

# The style-file is the relative path for the CSS file to use.
# Relative from the workspace root (repo_src/).
style-file = "repo_src/frontend/style/main.css"

# Assets dir. All files found here will be copied and served as static assets.
# Relative from the workspace root (repo_src/).
assets-dir = "repo_src/frontend/public"

# The index.html file to be used as a template.
# Relative from the workspace root (repo_src/).
index-file = "repo_src/frontend/index.html"

# The IP and port where the server serves the content.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring.
reload-port = 3001

# The browserlist query used for optimizing the JS bundle.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD".
env = "DEV"

# Path to .env file that will be created if it does not exist.
# Path is relative to the directory of this Leptos.toml file (repo_src/).
env-file = ".env"

# Path to the Cargo.toml file for the Wassm / client side.
lib-cargo-manifest-path = "repo_src/frontend/Cargo.toml"

# Features to use when compiling the lib target.
lib-features = ["hydrate"]

# Path to the Cargo.toml file for the Server / bin side.
bin-cargo-manifest-path = "repo_src/backend/Cargo.toml"

# Features to use when compiling the bin target.
# The backend will enable "ssr" for the frontend crate.
bin-features = ["DATABASE_AUTO_MIGRATE"]

# Name of the executable generated by the bin target.
# Should match the `name` in `backend/Cargo.toml`.
bin-exe-name = "backend"

# Working directory for the bin target. Defaults to workspace root.
# bin-working-dir = "." 

# Default profile for development (can be overridden in user's ~/.cargo/config.toml)
[profile.dev]
opt-level = 1 # A bit of optimization for dev builds
debug = true

# Profile for release builds
[profile.release]
opt-level = 'z' # Optimize for size. 's' is also a good option.
lto = true
codegen-units = 1
panic = "abort"
strip = "symbols" # "debuginfo" or true also works 